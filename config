# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!
#
# This config file uses keycodes (bindsym) and was written for the QWERTY
# layout.
#
# To get a config file with the same key positions, but for your current
# layout, use the i3-config-wizard
#

# Window bar font
font pango:Terminus 12

# Set dmenu font
set $dmenufont "Terminus:size=15"

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# colours
set $black      #000000
set $white      #ffffff
set $dark_grey  #424242
set $grey       #666666
set $light_grey #aaaaaa
set $light_blue #44bbff
set $purple     #361599
set $bright_red #ee0000

# class                 border      background  text        indicator   child_border 
client.focused          $light_blue $light_blue $black      $light_blue $light_blue
client.focused_inactive $dark_grey  $dark_grey  $white      $dark_grey  $dark_grey
client.unfocused        $dark_grey  $dark_grey  $white      $dark_grey  $dark_grey

# set workspace controller is local python script
set $workspace_controller ~/.config/i3/i3_workspace_controller.py

# set windows key as mod
set $mod Mod4

# set alt key at alt
set $alt Mod1

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up k
set $down j
set $left h
set $right l

# set resize velocity
set $resize_velocity 3

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec gnome-terminal

# kill focused window
bindsym $mod+Shift+d kill

# start dmenu (a program launcher)               #background  #text        #selectedbkgr.    #selectedtext
bindsym $mod+p exec dmenu_run -fn $dmenufont -nb "$black" -nf "$white" -sb "$light_blue" -sf "$black"
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focused window
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+$alt+$left move left
bindsym $mod+$alt+$down move down
bindsym $mod+$alt+$up move up
bindsym $mod+$alt+$right move right

bindsym $mod+$alt+Left move left
bindsym $mod+$alt+Down move down
bindsym $mod+$alt+Up move up
bindsym $mod+$alt+Right move right

# split in horizontal orientation
bindsym $mod+c split h

# split in vertical orientation
bindsym $mod+v split v

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t split v; layout tabbed
bindsym $mod+e layout toggle split

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move_and_focus scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# switch to workspace
bindsym $mod+1 exec $workspace_controller focus 1
bindsym $mod+2 exec $workspace_controller focus 2
bindsym $mod+3 exec $workspace_controller focus 3
bindsym $mod+4 exec $workspace_controller focus 4
bindsym $mod+5 exec $workspace_controller focus 5
bindsym $mod+6 exec $workspace_controller focus 6
bindsym $mod+7 exec $workspace_controller focus 7
bindsym $mod+8 exec $workspace_controller focus 8
bindsym $mod+9 exec $workspace_controller focus 9
bindsym $mod+0 exec $workspace_controller focus 10

bindsym $mod+n exec $workspace_controller focus prev
bindsym $mod+slash exec $workspace_controller focus next

bindsym $mod+m exec $workspace_controller focus 1
bindsym $mod+comma exec $workspace_controller focus 2
bindsym $mod+period exec $workspace_controller focus 3

# move focused container to workspace
bindsym $mod+Shift+1 exec $workspace_controller move 1
bindsym $mod+Shift+2 exec $workspace_controller move 2
bindsym $mod+Shift+3 exec $workspace_controller move 3
bindsym $mod+Shift+4 exec $workspace_controller move 4
bindsym $mod+Shift+5 exec $workspace_controller move 5
bindsym $mod+Shift+6 exec $workspace_controller move 6
bindsym $mod+Shift+7 exec $workspace_controller move 7
bindsym $mod+Shift+8 exec $workspace_controller move 8
bindsym $mod+Shift+9 exec $workspace_controller move 9
bindsym $mod+Shift+0 exec $workspace_controller move 10

bindsym $mod+Shift+n exec $workspace_controller move prev
bindsym $mod+Shift+slash exec $workspace_controller move next

bindsym $mod+Shift+m exec $workspace_controller move 1
bindsym $mod+Shift+comma exec $workspace_controller move 2
bindsym $mod+Shift+period exec $workspace_controller move 3

# move focused container to workspace and focus
bindsym $mod+$alt+1 exec $workspace_controller move_and_focus 1
bindsym $mod+$alt+2 exec $workspace_controller move_and_focus 2
bindsym $mod+$alt+3 exec $workspace_controller move_and_focus 3
bindsym $mod+$alt+4 exec $workspace_controller move_and_focus 4
bindsym $mod+$alt+5 exec $workspace_controller move_and_focus 5
bindsym $mod+$alt+6 exec $workspace_controller move_and_focus 6
bindsym $mod+$alt+7 exec $workspace_controller move_and_focus 7
bindsym $mod+$alt+8 exec $workspace_controller move_and_focus 8
bindsym $mod+$alt+9 exec $workspace_controller move_and_focus 9
bindsym $mod+$alt+0 exec $workspace_controller move_and_focus 10

bindsym $mod+$alt+n exec $workspace_controller move_and_focus prev
bindsym $mod+$alt+slash exec $workspace_controller move_and_focus next

bindsym $mod+$alt+m exec $workspace_controller move_and_focus 1
bindsym $mod+$alt+comma exec $workspace_controller move_and_focus 2
bindsym $mod+$alt+period exec $workspace_controller move_and_focus 3

# output sink controls
set $output_sink_controller ~/.config/i3/output_sink_controller.py

bindsym $mod+F1 exec $output_sink_controller set home_headphones; exec pkill -RTMIN+1 i3blocks
bindsym $mod+F2 exec $output_sink_controller set home_speakers; exec pkill -RTMIN+1 i3blocks

# volume controls
set $volume_change 5

bindsym $mod+F3 exec amixer -q sset Master $volume_change%-; exec pkill -RTMIN+1 i3blocks
bindsym $mod+F4 exec amixer -q sset Master $volume_change%+; exec pkill -RTMIN+1 i3blocks
bindsym XF86AudioLowerVolume exec amixer -q sset Master $volume_change%-; exec pkill -RTMIN+1 i3blocks
bindsym XF86AudioRaiseVolume exec amixer -q sset Master $volume_change%+; exec pkill -RTMIN+1 i3blocks


# switch monitor
bindsym $mod+semicolon focus output right
# move to other monitor
bindsym $mod+Shift+semicolon move container to output right
# move to and focus other monitor
bindsym $mod+$alt+semicolon move container to output right; focus output right

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# for shutting down or quitting i3
mode "exit" {
        bindsym p exec shutdown now
        bindsym r exec reboot
        bindsym q exit

        # return to normal
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# enter exiting mode
bindsym $mod+Shift+q mode "exit"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width $resize_velocity px or $resize_velocity ppt
        bindsym $down       resize grow height $resize_velocity px or $resize_velocity ppt
        bindsym $up         resize shrink height $resize_velocity px or $resize_velocity ppt
        bindsym $right      resize grow width $resize_velocity px or $resize_velocity ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width $resize_velocity px or $resize_velocity ppt
        bindsym Down        resize grow height $resize_velocity px or $resize_velocity ppt
        bindsym Up          resize shrink height $resize_velocity px or $resize_velocity ppt
        bindsym Right       resize grow width $resize_velocity px or $resize_velocity ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3blocks -c ~/.config/i3/i3blocks.conf
        position top
        strip_workspace_numbers yes

        # i3bar colors
        colors {
                               #border     #background #text
            focused_workspace  $light_blue $black      $light_blue
	    active_workspace   $white      $black      $white
	    inactive_workspace $dark_grey  $black      $white
	    urgent_workspace   $bright_red $black      $white
        }
}

# Always initialise workspace controller
exec_always $workspace_controller start_up
